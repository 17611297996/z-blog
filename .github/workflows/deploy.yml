name: CI/CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PNPM_VERSION: "8.15.6"  # 精确版本锁定:ml-citation{ref="6,8" data="citationList"}

    steps:
    # ███████ 阶段1：环境初始化 ███████
    - uses: actions/checkout@v4

    - name: 安装 Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"
        cache: 'pnpm'  # 启用pnpm缓存:ml-citation{ref="3,6" data="citationList"}
        cache-dependency-path: '**/pnpm-lock.yaml'

    # ███████ 阶段2：pnpm紧急修复 ███████
    - name: 独立安装pnpm
      uses: pnpm/action-setup@v3  # 专用安装器:ml-citation{ref="3,7" data="citationList"}
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false

    - name: 路径强制修复
      run: |
        # 清除旧版本残留:ml-citation{ref="7" data="citationList"}
        sudo rm -f /usr/local/bin/pnpm /usr/local/bin/pnpx 2>/dev/null || true
        
        # 重建符号链接:ml-citation{ref="3,7" data="citationList"}
        sudo ln -sf "$(npm root -g)/bin/pnpm" /usr/local/bin/pnpm
        
        # 注入全局路径:ml-citation{ref="4,7" data="citationList"}
        echo "$(npm root -g)/bin" >> $GITHUB_PATH
        
        # 修复权限:ml-citation{ref="7,8" data="citationList"}
        sudo chmod 755 $(npm root -g)/bin/pnpm

    # ███████ 阶段3：验证修复 ███████
    - name: 诊断环境
      run: |
        echo "=== 路径检查 ==="
        echo "PATH: $PATH" | tr ':' '\n' | grep -iE 'npm|pnpm'
        which pnpm && pnpm -v || echo "pnpm未找到"

    # ███████ 阶段4：构建流程 ███████
    - name: 安装依赖
      run: |
        pnpm config set registry https://registry.npmmirror.com  # 国内镜像:ml-citation{ref="4,6" data="citationList"}
        pnpm install --frozen-lockfile  # 依赖锁定模式:ml-citation{ref="6" data="citationList"}

    - name: 构建项目
      run: pnpm build

    # ███████ 阶段5：部署示例 ███████
    - name: 部署到服务器
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "dist/*"
        target: "/var/www/app"
