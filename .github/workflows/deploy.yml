name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PNPM_VERSION: "8.15.6"  # 精确锁定版本:ml-citation{ref="6" data="citationList"}

    steps:
    # ███████ 第 1 阶段：环境基础配置 █████████████
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'pnpm'  # 启用pnpm缓存:ml-citation{ref="3" data="citationList"}
        cache-dependency-path: '**/pnpm-lock.yaml'

    # ███████ 第 2 阶段：pnpm 紧急修复 ██████████
    - name: 强制安装 pnpm
      run: |
        # 清除旧版本残留:ml-citation{ref="7" data="citationList"}
        sudo rm -f /usr/local/bin/pnpm /usr/local/bin/pnpx 2>/dev/null || true
        
        # 通过 Corepack 安装（Node.js 内置工具）:ml-citation{ref="1" data="citationList"}
        sudo corepack enable --install-directory=/usr/local/bin
        sudo corepack prepare pnpm@$PNPM_VERSION --activate

        # 通过 npm 双重安装（国内镜像加速）:ml-citation{ref="6,8" data="citationList"}
        npm install -g pnpm@$PNPM_VERSION --registry=https://registry.npmmirror.com

        # 注入全局路径到环境变量:ml-citation{ref="5" data="citationList"}
        echo "npm全局路径: $(npm root -g)/bin" >> $GITHUB_PATH

        # 创建硬链接至标准路径:ml-citation{ref="3" data="citationList"}
        sudo ln -sf "$(npm root -g)/bin/pnpm" /usr/local/bin/pnpm

        # 修复执行权限:ml-citation{ref="8" data="citationList"}
        sudo chmod 755 $(npm root -g)/bin/pnpm

    # ███████ 第 3 阶段：环境验证 ███████████████
    - name: 验证环境配置
      run: |
        echo "===== 诊断报告 ====="
        which pnpm || echo "pnpm未找到！"  # 二进制路径检查
        pnpm -v                            # 版本验证
        ls -l $(which pnpm)                # 权限验证
        echo "PATH分解: $PATH" | tr ':' '\n' # 路径分析

    # ███████ 第 4 阶段：构建流程 ███████████████
    - name: 安装依赖
      working-directory: ./frontend
      run: |
        pnpm install --frozen-lockfile  # 依赖锁定模式:ml-citation{ref="6" data="citationList"}
        pnpm store path                # 显示存储位置

    - name: 构建项目
      working-directory: ./frontend
      run: pnpm build

    # ███████ 第 5 阶段：部署 ██████████████████
    - name: 同步到服务器
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./frontend/dist/*"
        target: "/var/www/production"
