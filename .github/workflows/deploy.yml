name: Vue Blog CI/CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT: "vue-blog-project"  # 定义项目根目录变量

    steps:
    # ███████ 阶段 1：代码检出 ███████████
    - name: 检出代码（保留完整仓库结构）
      uses: actions/checkout@v4
      
    # ███████ 阶段 2：Node.js 环境配置 ███████████
    - name: 安装 Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: ${{ env.PROJECT_ROOT }}/pnpm-lock.yaml  # 精确锁定缓存路径

    # ███████ 阶段 3：pnpm 安装 ███████████
    - name: 安装指定版本 pnpm
      run: npm install -g pnpm@8.15.6 --prefix ${{ env.PROJECT_ROOT }}

    # ███████ 阶段 4：依赖安装 ███████████
    - name: 安装项目依赖
      working-directory: ${{ env.PROJECT_ROOT }}  # 关键路径配置
      run: |
        pnpm config set store-dir ~/.pnpm-store
        pnpm install --frozen-lockfile

    # ███████ 阶段 5：构建流程 ███████████
    - name: 执行项目构建
      working-directory: ${{ env.PROJECT_ROOT }}
      run: pnpm build
      env:
        NODE_ENV: production

    # ███████ 阶段 6：部署验证 ███████████
    - name: 验证构建产物
      working-directory: ${{ env.PROJECT_ROOT }}
      run: |
        [ -d "./dist" ] || (echo "构建产物目录不存在"; exit 1)
        [ -f "./dist/index.html" ] || (echo "入口文件缺失"; exit 1)

    # ███████ 阶段 7：增量部署 ███████████
    - name: 智能同步到服务器
      uses: easingthemes/ssh-deploy@v4
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SERVER_IP }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "${{ env.PROJECT_ROOT }}/dist/"
        TARGET: "/var/www/production"
        ARGS: "-avz --chmod=755 --checksum --delete"
